type PostbackInfoList {
  "ID"
  id: Int
  "投放渠道"
  channel: String
  "事件类型"
  event_type: String
  "回传代码"
  action_type: String
  "回传状态"
  activated: Int
  "更新时间"
  update_time: String
  "originId"
  origin_id: String
}

type ResponseWrapper {
  data: [PostbackInfoList]
  total: Int
  code: Int
}

type eventTypeResponse {
  event_type: String
}

extend type Query {
  """
    查询激活回传列表接口
  """
  getPostbackList(
    "pageNo"
    pageNo: Int!
    "pageSize"
    pageSize: Int!
    "回传区分(MP/H5)"
    postbackType: String
    "投放渠道"
    channel: String
    "回传类型"
    eventType: String
    "MP页面时的查询条件 - originId"
    originId: String
    "开始时间（毫秒时间戳）"
    startTime: Float
    "结束时间（毫秒时间戳）"
    endTime: Float
  ): ResponseWrapper

  """
    通过channel查询eventType接口
  """
  getEventTypeByChannel(
    "投放渠道"
    channel: String
  ): [eventTypeResponse]
}


extend type Mutation {
  # add(userName: String): AativityInfo
  """
    活动预约
  """
  appointmentPeriod(name: String!): String
}